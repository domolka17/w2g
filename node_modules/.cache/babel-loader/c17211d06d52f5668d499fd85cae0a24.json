{"ast":null,"code":"var _jsxFileName = \"D:\\\\wum\\\\w2g2022-web\\\\src\\\\components\\\\Chat.js\",\n    _s = $RefreshSig$();\n\n/**\r\n *  Chat window\r\n *  TODO manages Chat\r\n *  TODO uses get and posts\r\n *  TODO exports it selfe, needs css style\r\n *  TODO writing message and submit it\r\n * \r\n */\nimport React, { useEffect, useState } from 'react';\nimport { chatPost } from './Controller/ChatController';\nimport \"./css/Chat.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Chat = () => {\n  _s();\n\n  const [messageList, getListData] = useState([]);\n  const [prevList, getPrevList] = useState([]);\n  const [message, setMessage] = useState('');\n  const [chatData, getChatData] = useState([]);\n  const [userData, getUserData] = useState([]);\n  const roomname = sessionStorage.getItem('roomname');\n  var listData = [];\n  useEffect(() => {\n    const interval = setInterval(() => {\n      fetchChatData(roomname);\n      fetchUserData(roomname);\n      console.log(userData);\n      console.log('Update Chat');\n    }, 3000);\n    return () => clearInterval(interval);\n  }, []);\n  useEffect(() => {\n    console.log(chatData);\n\n    if (messageList.length < chatData.length) {\n      let temp = [];\n\n      for (let i = 0; i < chatData.length; i++) {\n        let user = getUserName(chatData[i].userID);\n        temp[i] = {\n          author: user,\n          text: chatData[i].text,\n          time: chatData[i].time\n        };\n      }\n\n      getListData(temp);\n    }\n  }, [chatData]);\n  useEffect(() => {\n    console.log(messageList);\n  }, [messageList]); // submit message button\n\n  const handleButton = () => {\n    chatPost(message, sessionStorage.getItem('roomname')); // after posting message, emptys message-input\n\n    setTimeout(function () {\n      setMessage('');\n    }, 500);\n  };\n\n  const getUserName = userID => {\n    let user = userData.find(item => {\n      return item.id == userID;\n    });\n\n    if (user == undefined) {\n      user = 'deleted User';\n    } else {\n      user = user;\n    }\n\n    return user;\n  };\n  /** \r\n  const convertChat=()=>{\r\n      \r\n      var check = false\r\n      var temp = [{author: 'user', text:'item.text', time: 'item.time'}]\r\n        chatData.forEach((item)=>{\r\n          \r\n          //cheks if user is in room, if nut user.name= undefined\r\n          const user = userData.find((person=>{\r\n              return person.id == item.userId}))\r\n          console.log(user)\r\n          // as a standart\r\n          var username=\"deleted User\"\r\n            // if user is in userlist / in room\r\n          if(user!=undefined)\r\n          {\r\n              username= user.name\r\n          }\r\n            // cleanes up the initial array + assings the first slot/ the scond if the first is a real message\r\n          if(temp.length==1){\r\n              if(temp[0].time=='item.time'){\r\n                  temp[0]= {author: username, text: item.text, time: item.time}\r\n                  const t = {author: username, text: item.text, time: item.time}\r\n              }\r\n              else{\r\n                  temp[1]= {author: username, text: item.text, time: item.time}\r\n                  \r\n              }\r\n              //other cheks wont trigger for this.item if this is true\r\n              check= true\r\n          }\r\n          // prosseses the other objects in chatData \r\n          if(temp.length>1 && check==false)\r\n          {\r\n              temp[temp.length]= {author: username, text: item.text, time: item.time}\r\n          }\r\n            check=false\r\n        })\r\n      console.log(temp)\r\n  }\r\n  */\n  //____________________________\n\n\n  const fetchChatData = roomname => {\n    fetch('https://gruppe13.toni-barth.com/rooms/' + roomname + '/chat', {\n      method: 'GET'\n    }).then(res => res.json()).then(response => {\n      getChatData(response.messages);\n    });\n  };\n\n  const fetchUserData = roomname => {\n    fetch('https://gruppe13.toni-barth.com/rooms/' + roomname + '/users').then(res => res.json()).then(response => {\n      getUserData(response.users);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ChatBox\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messageBox\",\n      children: messageList.map(line => /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"massage\",\n        children: line.author + ': ' + line.text\n      }, line.time, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 30\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ChatSubmitbar\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        class: \"submit\",\n        placeholder: \"Narricht schreiben\",\n        value: message,\n        onChange: change => setMessage(change.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: event => handleButton(),\n        className: \"message_submit\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Chat, \"xHwdV8xjxa77dwRFMKKe/IYV6Cc=\");\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useEffect","useState","chatPost","Chat","messageList","getListData","prevList","getPrevList","message","setMessage","chatData","getChatData","userData","getUserData","roomname","sessionStorage","getItem","listData","interval","setInterval","fetchChatData","fetchUserData","console","log","clearInterval","length","temp","i","user","getUserName","userID","author","text","time","handleButton","setTimeout","find","item","id","undefined","fetch","method","then","res","json","response","messages","users","map","line","change","target","value","event"],"sources":["D:/wum/w2g2022-web/src/components/Chat.js"],"sourcesContent":["/**\r\n *  Chat window\r\n *  TODO manages Chat\r\n *  TODO uses get and posts\r\n *  TODO exports it selfe, needs css style\r\n *  TODO writing message and submit it\r\n * \r\n */\r\n\r\nimport React, { useEffect, useState } from 'react'\r\nimport {  chatPost } from './Controller/ChatController'\r\nimport \"./css/Chat.css\";\r\n\r\n\r\nconst Chat = () => {\r\n    const [messageList, getListData]= useState([])\r\n    const [prevList, getPrevList] = useState([])\r\n    const [message, setMessage] = useState('')\r\n    const [chatData, getChatData]= useState([])\r\n    const [userData, getUserData] = useState([])\r\n    const roomname = sessionStorage.getItem('roomname')\r\n    \r\n    var listData = []\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n                fetchChatData(roomname)\r\n                fetchUserData(roomname)\r\n                \r\n                console.log(userData)\r\n                console.log('Update Chat')\r\n\t\t}, 3000);\r\n\t\treturn () => clearInterval(interval);\r\n\t}, []);\r\n\r\n    useEffect(()=>{\r\n        console.log(chatData)\r\n        if(messageList.length<chatData.length){\r\n            let temp =[]\r\n            for(let i = 0; i<chatData.length; i++) {\r\n                let user = getUserName(chatData[i].userID)\r\n                temp[i]=  { author: user, text: chatData[i].text, time: chatData[i].time}\r\n            }\r\n            getListData(temp)\r\n        }\r\n    }, [chatData]);\r\n\r\n    useEffect(()=>{\r\n        console.log(messageList)\r\n    }, [messageList]);\r\n\r\n    // submit message button\r\n    const handleButton = ()=>{\r\n        chatPost(message, sessionStorage.getItem('roomname'))\r\n        // after posting message, emptys message-input\r\n        setTimeout(function () {\r\n            setMessage('')\r\n        }, 500)\r\n    }\r\n    const getUserName=(userID)=>{\r\n        let user = userData.find((item)=>{\r\n            return item.id == userID\r\n        })\r\n\r\n        if(user== undefined){\r\n            user='deleted User'\r\n        }\r\n        else{\r\n            user=user\r\n        }\r\n        return user\r\n    }\r\n\r\n    /** \r\n    const convertChat=()=>{\r\n        \r\n        var check = false\r\n        var temp = [{author: 'user', text:'item.text', time: 'item.time'}]\r\n\r\n        chatData.forEach((item)=>{\r\n            \r\n            //cheks if user is in room, if nut user.name= undefined\r\n            const user = userData.find((person=>{\r\n                return person.id == item.userId}))\r\n            console.log(user)\r\n            // as a standart\r\n            var username=\"deleted User\"\r\n\r\n            // if user is in userlist / in room\r\n            if(user!=undefined)\r\n            {\r\n                username= user.name\r\n            }\r\n\r\n            // cleanes up the initial array + assings the first slot/ the scond if the first is a real message\r\n            if(temp.length==1){\r\n                if(temp[0].time=='item.time'){\r\n                    temp[0]= {author: username, text: item.text, time: item.time}\r\n                    const t = {author: username, text: item.text, time: item.time}\r\n                }\r\n                else{\r\n                    temp[1]= {author: username, text: item.text, time: item.time}\r\n                    \r\n                }\r\n                //other cheks wont trigger for this.item if this is true\r\n                check= true\r\n            }\r\n            // prosseses the other objects in chatData \r\n            if(temp.length>1 && check==false)\r\n            {\r\n                temp[temp.length]= {author: username, text: item.text, time: item.time}\r\n            }\r\n\r\n            check=false\r\n\r\n        })\r\n        console.log(temp)\r\n    }\r\n    */\r\n    //____________________________\r\n\r\n    const fetchChatData = (roomname) => {\r\n        \r\n        fetch('https://gruppe13.toni-barth.com/rooms/'+roomname+'/chat', {\r\n            method:'GET'\r\n        }).then((res) =>\r\n        res.json()).then((response)=> {\r\n            getChatData(response.messages);\r\n        \r\n        })\r\n        \r\n    }\r\n\r\n    const fetchUserData = (roomname) => {\r\n\t\tfetch('https://gruppe13.toni-barth.com/rooms/' + roomname + '/users')\r\n\t\t\t.then((res) =>\r\n\t\t\t\tres.json())\r\n\t\t\t.then((response) => {\r\n\t\t\t\tgetUserData(response.users);\r\n                \r\n\t\t\t})\r\n\r\n\t}\r\n    \r\n  return (\r\n    <div className='ChatBox'>\r\n        <div className='messageBox'>\r\n\t\t\t{messageList.map( line => <ul className='massage' key={line.time}>{line.author+': '+line.text}</ul>)}\r\n        </div>\r\n        <div className='ChatSubmitbar'>\r\n            <input type=\"text\"  class=\"submit\" placeholder=\"Narricht schreiben\" value={message} onChange={(change) => setMessage(change.target.value)}></input>\r\n            <button onClick={event => handleButton()} className=\"message_submit\">Send</button>\r\n       \r\n        </div>\r\n    </div>\r\n    \r\n  )\r\n}\r\n\r\nexport default Chat"],"mappings":"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"},"metadata":{},"sourceType":"module"}