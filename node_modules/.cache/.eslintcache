[{"C:\\Users\\Tom\\w2g2022-web\\src\\index.js":"1","C:\\Users\\Tom\\w2g2022-web\\src\\App.js":"2","C:\\Users\\Tom\\w2g2022-web\\src\\reportWebVitals.js":"3","C:\\Users\\Tom\\w2g2022-web\\src\\components\\Watchparty.js":"4","C:\\Users\\Tom\\w2g2022-web\\src\\components\\Navbar.js":"5","C:\\Users\\Tom\\w2g2022-web\\src\\components\\Startseite.js":"6","C:\\Users\\Tom\\w2g2022-web\\src\\components\\UserCreateSide.js":"7","C:\\Users\\Tom\\w2g2022-web\\src\\components\\about.js":"8","C:\\Users\\Tom\\w2g2022-web\\src\\components\\Chat.js":"9","C:\\Users\\Tom\\w2g2022-web\\src\\components\\Help.js":"10","C:\\Users\\Tom\\w2g2022-web\\src\\components\\NotFound.js":"11","C:\\Users\\Tom\\w2g2022-web\\src\\components\\Host.js":"12","C:\\Users\\Tom\\w2g2022-web\\src\\components\\Room.js":"13","C:\\Users\\Tom\\w2g2022-web\\src\\components\\Controller\\RoomController.js":"14","C:\\Users\\Tom\\w2g2022-web\\src\\components\\Controller\\UserController.js":"15","C:\\Users\\Tom\\w2g2022-web\\src\\components\\NavbarElements.js":"16","C:\\Users\\Tom\\w2g2022-web\\src\\components\\Controller\\ChatController.js":"17","C:\\Users\\Tom\\w2g2022-web\\src\\components\\Controller\\VideoController.js":"18"},{"size":552,"mtime":1664296960069,"results":"19","hashOfConfig":"20"},{"size":3594,"mtime":1664296947935,"results":"21","hashOfConfig":"20"},{"size":375,"mtime":1661777006571,"results":"22","hashOfConfig":"20"},{"size":5479,"mtime":1664293490702,"results":"23","hashOfConfig":"20"},{"size":2691,"mtime":1664283575976,"results":"24","hashOfConfig":"20"},{"size":1675,"mtime":1664283575987,"results":"25","hashOfConfig":"20"},{"size":2793,"mtime":1664283575988,"results":"26","hashOfConfig":"20"},{"size":656,"mtime":1664283575991,"results":"27","hashOfConfig":"20"},{"size":3125,"mtime":1664283575968,"results":"28","hashOfConfig":"20"},{"size":1309,"mtime":1664283575974,"results":"29","hashOfConfig":"20"},{"size":192,"mtime":1664283575982,"results":"30","hashOfConfig":"20"},{"size":927,"mtime":1661777006563,"results":"31","hashOfConfig":"20"},{"size":2342,"mtime":1664283575985,"results":"32","hashOfConfig":"20"},{"size":1420,"mtime":1664283575969,"results":"33","hashOfConfig":"20"},{"size":943,"mtime":1664283575970,"results":"34","hashOfConfig":"20"},{"size":2473,"mtime":1664283575981,"results":"35","hashOfConfig":"20"},{"size":460,"mtime":1664283575969,"results":"36","hashOfConfig":"20"},{"size":2654,"mtime":1664283575970,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1d1lnuc",{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"47"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"47"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"47"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"47"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"47"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"47"},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"47"},"C:\\Users\\Tom\\w2g2022-web\\src\\index.js",[],[],"C:\\Users\\Tom\\w2g2022-web\\src\\App.js",[],[],"C:\\Users\\Tom\\w2g2022-web\\src\\reportWebVitals.js",[],[],[],"C:\\Users\\Tom\\w2g2022-web\\src\\components\\Watchparty.js",["100","101","102","103","104","105","106","107"],[],"import React, { useState, useEffect, useRef } from 'react';\r\nimport \"./css/watchparty.css\";\r\nimport { useNavigate } from \"react-router-dom\"\r\nimport { joinRoom, leaveRoom } from './Controller/RoomController';\r\nimport ReactPlayer from 'react-player';\r\nimport { getVideo, getVideoPos, getVideoStat, postVideo, postVideoPos, postVideoStat } from './Controller/VideoController';\r\nimport { useParams } from 'react-router-dom';\r\nimport Chat from './Chat';\r\n\r\n\r\nconst Watchparty = () => {\t\t// room siplay with userlist of rpp\r\n\tconst [link, setLink] = useState('')\r\n\tconst { roomid } = useParams()\r\n\tconst navigate = useNavigate()\r\n\tconst roomname = sessionStorage.getItem('roomname')\r\n\t//player stats\r\n\tconst [url, setUrl] = useState(null)\r\n\tconst [playing, setPlaying] = useState(false)\r\n\tconst [controls, setControls] = useState(true)\r\n\tconst [position, setPosition] = useState(0)\r\n\tconst [progress, setProgress] = useState({ played: 0.0, playedSeconds: 0.0, loaded: 0.0, loadedSeconds: 0.0 })\r\n\tconst refPlayer = useRef()\r\n\r\n\t//handlers\r\n\tconst handlePlay = () => {\r\n\t\tconsole.log('onPlay')\r\n\r\n\t\tpostVideoStat('playing')\r\n\t}\r\n\tconst handlePause = () => {\r\n\t\tconsole.log('onPause')\r\n\t\tpostVideoStat('paused')\r\n\t}\r\n\tconst handleProgress=(pro)=>{\r\n\t\tsetProgress(pro)\r\n\t\tconsole.log(progress)\r\n\t}\r\n\r\n\r\n\t// constantly snyc once every 3 sekonds\r\n\tuseEffect(() => {\r\n\t\tconsole.log(\"test check\")\r\n\t\tcheckInvite()\r\n\t\tconst interval = setInterval(() => {\r\n\t\t\tsync()\r\n\t\t\tfetchData()\r\n\t\t}, 3000);\r\n\t\treturn () => clearInterval(interval);\r\n\t}, []);\r\n\r\n\tuseEffect(()=>{\r\n        console.log(progress)\r\n\t\t\r\n    }, [progress]);\r\n\t \r\n\t//---------------------------------------\r\n\t// on load check\r\n\tconst checkInvite = () => {\r\n\t\tif (sessionStorage.getItem('id') == null) {\r\n\t\t\twindow.sessionStorage.setItem(\"redirect\", roomid)\r\n\t\t\tnavigate('/UserCreateSide')\r\n\t\t}\r\n\t\tif (sessionStorage.getItem('id') != null && sessionStorage.getItem('roomname') == null) {\r\n\t\t\tjoinRoom(roomid)\r\n\t\t\tnavigate('/Watchparty/' + roomid)\r\n\t\t}\r\n\t}\r\n\r\n\t//---------------------------------------\r\n\t// buttons\r\n\tconst handleButton = () => {\t\t// gives button its funktion leave, submit video\r\n\t\tsetUrl(link)\r\n\t\tpostVideo(link)\r\n\t\tconsole.log(url)\r\n\t\tconsole.log(window.location.href)\r\n\t}\r\n\tconst handleButton2 = () => {\t\t// gives button its funktion, leave Room\r\n\t\tleaveRoom(sessionStorage.getItem('roomname'))\r\n\t\tsessionStorage.removeItem('url')\r\n\t\tsessionStorage.removeItem('stat')\r\n\t\tnavigate('/Room')\r\n\t}\r\n\r\n\t// syncs\r\n\t// calls multiple functions, which shouls sync different aspects of the player\r\n\tconst sync = async () => {\t\t//  the room should update, url, position\r\n\t\tsyncUrl()\r\n\t\tcompareState()\r\n\t}\r\n\t// takes value of getVideo and sets it as room(user) url, when url = compare nothing happens to the player, if compare was differen the player changes \r\n\tconst syncUrl = () => {\r\n\t\tconst compare = getVideo()\r\n\t\tsetUrl(compare)\r\n\t\tsessionStorage.setItem(\"url\", url)\r\n\t\treturn true\r\n\t}\r\n\t// should get the status of the video and paus/play the video, but doesnt work\r\n\tconst compareState = () => {\r\n\t\tconst a = getVideoStat()\r\n\t\tif (a == 'playing') {\r\n\t\t\tsetPlaying(true)\r\n\t\t}\r\n\t\tif (a == 'paused') {\r\n\t\t\tsetPlaying(false)\r\n\t\t}\r\n\t}\r\n\t// gets the video Progress of the server and syncs with server \r\n\tconst compareProgress = () => {\r\n\t\tconst b = getVideoPos()\r\n\t\tif(b>progress.played)\r\n\t\t{\r\n\t\t\trefPlayer.current.seekTo( b, \"seconds\")\r\n\t\t}\r\n\r\n\t\tif(b<progress.played)\r\n\t\t{\r\n\t\t\trefPlayer.current.seekTo( b, \"seconds\")\r\n\t\t}\r\n\t}\r\n\r\n\t//_____________________________________________________________________________________________\r\n\t// user list\r\n\tconst [data, getData] = useState([])\r\n\tconst URL = 'https://gruppe13.toni-barth.com/rooms/' + roomname + '/users';\r\n\r\n\r\n\r\n\tconst fetchData = () => {\r\n\t\tfetch(URL)\r\n\t\t\t.then((res) =>\r\n\t\t\t\tres.json())\r\n\t\t\t.then((response) => {\r\n\t\t\t\tconsole.log(response.users);\r\n\t\t\t\tgetData(response.users);\r\n\t\t\t})\r\n\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<body class=\"home\">\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<div class=\"partytitle_text\">\r\n\t\t\t\t\t\t<h1 class=\"party_title\">Raum: {roomname} </h1>\r\n\t\t\t\t\t\t<button onClick={event => handleButton2()} className=\"link_leave\">Raum Verlassen</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"links\">\r\n\t\t\t\t\t\t<input type=\"text\" name=\"roomname\" class=\"link_box\" placeholder=\"Link einfügen\" value={link} onChange={(change) => setLink(change.target.value)}></input>\r\n\t\t\t\t\t\t<button onClick={event => handleButton()} className=\"link_submit\">Starten\t</button>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<div class=\"player\">\r\n\t\t\t\t\t\t\t<ReactPlayer\r\n\t\t\t\t\t\t\t\twidth=\"62%\"\r\n\t\t\t\t\t\t\t\theight=\"62%\"\r\n\t\t\t\t\t\t\t\tclass='reactplayer'\r\n\t\t\t\t\t\t\t\turl={url}\r\n\t\t\t\t\t\t\t\tplaying={playing}\r\n\t\t\t\t\t\t\t\tcontrols={controls}\r\n\t\t\t\t\t\t\t\tonReady={() => console.log('onReady')}\r\n\t\t\t\t\t\t\t\tonStart={() => console.log('onStart')}\r\n\t\t\t\t\t\t\t\tonPlay={() => handlePlay()}\r\n\t\t\t\t\t\t\t\tonPause={() => handlePause()}\r\n\t\t\t\t\t\t\t\tonBuffer={() => console.log('onBuffer')}\r\n\t\t\t\t\t\t\t\tonProgress={(pro)=> handleProgress(pro)}\r\n\t\t\t\t\t\t\t\tonSeek={()=> console.log(\"UUUU\")}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<div class=\"user_box\">\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<p class=\"users\">Nutzer in dieser Watchparty:</p>\r\n\t\t\t\t\t\t\t\t<p class=\"user_list\">\r\n\t\t\t\t\t\t\t\t\t{data.map((user) => (\r\n\t\t\t\t\t\t\t\t\t\t<tr key={user.id}>\r\n\t\t\t\t\t\t\t\t\t\t\t<td>{user.name}</td>\r\n\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"chat\">\r\n\t\t\t\t\t\t<Chat />\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t</div>\r\n\t\t\t</body>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Watchparty\r\n","C:\\Users\\Tom\\w2g2022-web\\src\\components\\Navbar.js",[],[],"C:\\Users\\Tom\\w2g2022-web\\src\\components\\Startseite.js",[],[],"C:\\Users\\Tom\\w2g2022-web\\src\\components\\UserCreateSide.js",["108","109","110","111"],[],"import React, { useState, useEffect } from 'react'\r\nimport {  createUser } from \"./Controller/UserController\";\r\nimport \"./css/host.css\";\r\nimport {useNavigate} from \"react-router-dom\"\r\nimport { createRoom, joinRoom } from './Controller/RoomController';\r\n\r\nconst UserCreatrSide = () => {\r\n    const [inp, setInput] = useState('')\r\n    const navigate = useNavigate()\r\n    const redirect = sessionStorage.getItem('redirect')\r\n    \r\n\r\n    useEffect(()=>{\r\n\t\tchecker()\r\n    }, []);\r\n\r\n\r\n\r\n    const  handleButton =  () => {\t\t// gives button its funktion\r\n\t\t\r\n        if(sessionStorage.getItem('redirect')!=null){\r\n            sessionStorage.removeItem('redirect');\r\n\r\n            // triggers when room is available\r\n            if(checker()==true){\r\n                createUser(inp)\r\n                setTimeout(function () {\r\n                    joinRoom(redirect)\r\n                    }, 500)\r\n                \r\n                setTimeout(function () {\r\n                navigate('/Watchparty/'+redirect)\r\n                }, 500)\r\n            }\r\n\r\n            else{\r\n                navigate('/*')\r\n            }\r\n\r\n\r\n           \r\n        }\r\n        else{\r\n            createUser(inp)\r\n            setTimeout(function () {\r\n                createRoom()\r\n                setTimeout(function () {\r\n                navigate('/Watchparty/'+sessionStorage.getItem('roomname'))\r\n                }, 500)\r\n                }, 200)\r\n        }\r\n    }\r\n\r\n    const checker=()=>{\r\n        var find = []\r\n        fetch('https://gruppe13.toni-barth.com/rooms/')\r\n          .then((res) =>\r\n        res.json())\r\n          .then((response) => {\r\n           find= response.roomsfind((item)=>{\r\n            return item.name == redirect\r\n            })\r\n         })\r\n        if(find == undefined)\r\n        {\r\n            return false\r\n        }\r\n        else{\r\n            return true\r\n        }\r\n    }\r\n\r\n  return (\r\n    <>\r\n    <body class=\"home\">\r\n        <div>\r\n            <div class=\"hosttitle_text\">\r\n                <h1 class=\"hosttitle\">Erstellen sie einen eigenen Raum für ihre Watchparty!</h1>\r\n            </div>\r\n            <div class=\"host_text\">\r\n                <p class=\"host_textbox\">Bitte geben Sie einen Benutzernamen ein um diese Seite nutzen zu können.</p>\r\n            </div>\r\n            <div class=\"input\">\r\n                <div class=\"eins\">\r\n                <input type=\"text\" class=\"input_box\" placeholder=\"Benutzernamen eingeben zb.: Floppa\" value={inp} onChange={(change) => setInput(change.target.value)}></input>\r\n                </div>\r\n                <div class=\"zwei\">\r\n\t\t\t\t\t\t<button onClick={event => handleButton()} className=\"host_button\">Bestätigen\t</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </body>\r\n</>\r\n  )\r\n}\r\n\r\nexport default UserCreatrSide","C:\\Users\\Tom\\w2g2022-web\\src\\components\\about.js",[],[],"C:\\Users\\Tom\\w2g2022-web\\src\\components\\Chat.js",["112","113","114","115"],[],"/**\r\n *  Chat window\r\n *  TODO manages Chat\r\n *  TODO uses get and posts\r\n *  TODO exports it selfe, needs css style\r\n *  TODO writing message and submit it\r\n * \r\n */\r\n\r\nimport React, { useEffect, useState } from 'react'\r\nimport {  chatPost } from './Controller/ChatController'\r\nimport \"./css/Chat.css\";\r\n\r\n\r\nconst Chat = () => {\r\n    const [messageList, getListData]= useState([])\r\n    const [message, setMessage] = useState('')\r\n    const [chatData, getChatData]= useState([])\r\n    const [userData, getUserData] = useState([])\r\n    const roomname = sessionStorage.getItem('roomname')\r\n\r\n    useEffect(() => {\r\n\r\n   \r\n        const interval = setInterval(() => {\r\n                fetchChatData(roomname)\r\n                fetchUserData(roomname)\r\n                console.log('Update Chat')\r\n\t\t}, 3000);\r\n\t\treturn () => clearInterval(interval);\r\n\t}, []);\r\n\r\n    useEffect(()=>{\r\n        console.log(chatData)\r\n        if(chatData.length>0){\r\n            let temp =[]\r\n            for(let i = 0; i<chatData.length; i++) {\r\n                const user = getUserName(chatData[i])\r\n                temp[i]=  { author: user, text: chatData[i].text, time: chatData[i].time}\r\n            }\r\n            getListData(temp)\r\n        }\r\n    }, [chatData]);\r\n\r\n    useEffect(()=>{\r\n        console.log(messageList)\r\n    }, [messageList]);\r\n\r\n\r\n    // submit message button\r\n    const handleButton = ()=>{\r\n        chatPost(message, sessionStorage.getItem('roomname'))\r\n        // after posting message, emptys message-input\r\n        setTimeout(function () {\r\n            setMessage('')\r\n        }, 500)\r\n    }\r\n    const getUserName=(userID)=>{\r\n        const user = userData.find((item)=>{\r\n            return item.id == userID.userId\r\n        })\r\n        let ret\r\n        if(user== undefined){\r\n            console.log(user)\r\n            ret='deleted User'\r\n        }\r\n        else{\r\n            ret=user.name\r\n        }\r\n        return ret\r\n    }\r\n\r\n    //____________________________\r\n\r\n    const fetchChatData = (roomname) => {\r\n        \r\n        fetch('https://gruppe13.toni-barth.com/rooms/'+roomname+'/chat', {\r\n            method:'GET'\r\n        }).then((res) =>\r\n        res.json()).then((response)=> {\r\n            getChatData(response.messages);\r\n        \r\n        })\r\n        \r\n    }\r\n\r\n    const fetchUserData = (roomname) => {\r\n\t\tfetch('https://gruppe13.toni-barth.com/rooms/' + roomname + '/users')\r\n\t\t\t.then((res) =>\r\n\t\t\t\tres.json())\r\n\t\t\t.then((response) => {\r\n\t\t\t\tgetUserData(response.users);\r\n                \r\n\t\t\t})\r\n\r\n\t}\r\n    \r\n  return (\r\n    <div className='ChatBox'>\r\n        <div className='messageBox'>\r\n\t\t\t{messageList.map( line => <ul className='massage' key={line.time}>{line.author+': '+line.text}</ul>)}\r\n        </div>\r\n        <div className='ChatSubmitbar'>\r\n            <input type=\"text\"  class=\"message_submit\" placeholder=\"Nachricht schreiben\" value={message} onChange={(change) => setMessage(change.target.value)}></input>\r\n            <button onClick={event => handleButton()} className=\"message_submit_button\">Senden</button>\r\n       \r\n        </div>\r\n    </div>\r\n    \r\n  )\r\n}\r\n\r\nexport default Chat","C:\\Users\\Tom\\w2g2022-web\\src\\components\\Help.js",[],[],"C:\\Users\\Tom\\w2g2022-web\\src\\components\\NotFound.js",[],[],"C:\\Users\\Tom\\w2g2022-web\\src\\components\\Host.js",["116","117","118","119","120"],[],"import React, { useState } from 'react'\r\nimport \"./css/host.css\";\r\nimport {useNavigate} from \"react-router-dom\"\r\nimport { createRoom } from \"./Controller/RoomController\";\r\nimport { deleteUser } from './Controller/UserController';\r\n\r\nconst  Host = () => {\r\n\tconst [inp, setInput] = useState('')\r\n\tconst navigate = useNavigate()\r\n\tconst  handleButton = async () => {\t\t// gives button its funktion\r\n\t\tfor(let i =0; i<100;i++)\r\n\t\t{\r\n\t\t\tdeleteUser(i)\r\n\t\t}\r\n\t}\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<body>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<div class=\"hosttitle_text\">\r\n\t\t\t\t\t\t<h1 class=\"hosttitle\"></h1>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"host_text\">\r\n\t\t\t\t\t\t<p class=\"host_textbox\">Drücken um Alle User zu löschen</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"input\">\r\n\t\t\t\t\t\t<div class=\"zwei\">\r\n\t\t\t\t\t\t\t<button onClick={event => handleButton()} className=\"host_button\">Delete ALL</button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</body>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Host;\r\n","C:\\Users\\Tom\\w2g2022-web\\src\\components\\Room.js",[],[],"C:\\Users\\Tom\\w2g2022-web\\src\\components\\Controller\\RoomController.js",["121"],[],"/*\r\n create Room should be done\r\n delete Room should be done\r\n join room should be done\r\n leave room should be done\r\n*/\r\n\r\nimport React from 'react'\r\n\r\n\r\n// collection of funktions related to the controll of a room\r\nconst url = 'https://gruppe13.toni-barth.com/rooms/'\r\n\r\n    export const createRoom =() => {\r\n        //put request, creation of room\r\n        fetch(url, {\r\n            method:'POST' ,\r\n            headers:{\"Content-Type\": \"application/json\"},             \r\n        })\r\n        //take respons, its the name of new room\r\n        .then( response => {\r\n           return response.json()})\r\n        .then (data => { joinRoom(data.name)\r\n        })  \r\n    }\r\n    export const joinRoom = (name) => {\r\n        // get roomname and user id put them in url\r\n        fetch(url + name +'/users', {\r\n            method:'PUT',\r\n            headers:{\"Content-Type\": \"application/json\"},\r\n            body:  JSON.stringify({\"user\": sessionStorage.getItem('id')})\r\n        })\r\n        window.sessionStorage.setItem(\"roomname\", name)\r\n    }\r\n    export const leaveRoom = (roomname) => {\r\n        // delete user from room\r\n        fetch(url +roomname+'/users', {\r\n          method:'DELETE',\r\n          headers:{\"Content-Type\": \"application/json\"},\r\n          body:  JSON.stringify({\"user\": sessionStorage.getItem('id')})\r\n      })\r\n        //update theUser\r\n        sessionStorage.removeItem('roomname');\r\n    }\r\n    \r\n\r\n\r\n","C:\\Users\\Tom\\w2g2022-web\\src\\components\\Controller\\UserController.js",[],[],"C:\\Users\\Tom\\w2g2022-web\\src\\components\\NavbarElements.js",[],[],"C:\\Users\\Tom\\w2g2022-web\\src\\components\\Controller\\ChatController.js",["122"],[],"import React from 'react'\r\n\r\n/**\r\n * get massage\r\n * put massage\r\n */\r\n\r\n\r\nconst url = 'https://gruppe13.toni-barth.com/rooms/'\r\n\r\n    export const chatPost = (data, roomname) => {\r\n        fetch(url+roomname+'/chat', {\r\n            method:'PUT',\r\n            headers:{\"Content-Type\": \"application/json\"},\r\n            body:  JSON.stringify({\"user\": sessionStorage.getItem('id'),\r\n                                   \"message\": data})\r\n        })\r\n    }\r\n\r\n    ","C:\\Users\\Tom\\w2g2022-web\\src\\components\\Controller\\VideoController.js",["123","124"],[],"import React, { useState } from 'react'\r\n/**\r\n * psot video  \r\n * get video\r\n * post / get status, pause, playing, position\r\n */\r\nconst roomurl = 'https://gruppe13.toni-barth.com/rooms/'\r\n  //  takes the url and sends it to the api, uses session userid and uses getVideo()  \r\n        // get video url, fetch video \r\n    export const postVideo = (url) => {\r\n        fetch(roomurl+sessionStorage.getItem('roomname') +'/video',{\r\n            method:'PUT',\r\n            headers:{\"Content-Type\": \"application/json\"}, \r\n            body:  JSON.stringify({\"user\": sessionStorage.getItem('id'),\"url\": url}),})\r\n            .then( (response) => { getVideo()} )\r\n    }\r\n \r\n    // saves the roomurl (in the api) to a sessionkey and returns it\r\n    export const getVideo = () => {\r\n        // get video url, fetch video url\r\n        fetch(roomurl + sessionStorage.getItem('roomname') + '/video')\r\n        .then(response => {return response.json()}).then(data => { sessionStorage.setItem(\"url\", data.url)})\r\n        return sessionStorage.getItem('url')\r\n    }\r\n    //saves room position from api of the api video to the session \r\n    export const getVideoPos = () => {          \r\n        // get video url, fetch video url\r\n        fetch(roomurl + sessionStorage.getItem('roomname') + '/position')\r\n        .then(response => {return response.json()}).then(data => { sessionStorage.setItem(\"position\", data.position)})\r\n        return sessionStorage.getItem('position')\r\n    }\r\n    // takes session positon and posts it to the api\r\n    export const postVideoPos = (pos) => {  //posts room position of video\r\n        // get video url, fetch video url\r\n        fetch(roomurl + sessionStorage.getItem('roomname') + '/position', {\r\n            method: 'PUT',\r\n            headers:{\"Content-Type\": \"application/json\"}, \r\n            body:  JSON.stringify({\"user\": sessionStorage.getItem('id'),\"position\": pos}),})\r\n    }\r\n\r\n    export const postVideoStat = (stat) => {  //posts room position of video\r\n        // get video url, fetch video url\r\n        fetch(roomurl + sessionStorage.getItem('roomname') + '/status', {\r\n            method: 'PUT',\r\n            headers:{\"Content-Type\": \"application/json\"}, \r\n            body:  JSON.stringify({\"user\": sessionStorage.getItem('id'),\"status\": stat}),\r\n        })\r\n    }\r\n\r\n    export const getVideoStat = () => {          \r\n        // get video url, fetch video url\r\n        fetch(roomurl + sessionStorage.getItem('roomname') + '/status')\r\n        .then(response => {return response.json()}).then(data => { sessionStorage.setItem(\"stat\", data.status)})\r\n\r\n        return sessionStorage.getItem('stat')\r\n    }\r\n    \r\n\r\n    \r\n\t\r\n",{"ruleId":"125","severity":1,"message":"126","line":6,"column":58,"nodeType":"127","messageId":"128","endLine":6,"endColumn":70},{"ruleId":"125","severity":1,"message":"129","line":19,"column":19,"nodeType":"127","messageId":"128","endLine":19,"endColumn":30},{"ruleId":"125","severity":1,"message":"130","line":20,"column":9,"nodeType":"127","messageId":"128","endLine":20,"endColumn":17},{"ruleId":"125","severity":1,"message":"131","line":20,"column":19,"nodeType":"127","messageId":"128","endLine":20,"endColumn":30},{"ruleId":"132","severity":1,"message":"133","line":49,"column":5,"nodeType":"134","endLine":49,"endColumn":7,"suggestions":"135"},{"ruleId":"136","severity":1,"message":"137","line":100,"column":9,"nodeType":"138","messageId":"139","endLine":100,"endColumn":11},{"ruleId":"136","severity":1,"message":"137","line":103,"column":9,"nodeType":"138","messageId":"139","endLine":103,"endColumn":11},{"ruleId":"125","severity":1,"message":"140","line":108,"column":8,"nodeType":"127","messageId":"128","endLine":108,"endColumn":23},{"ruleId":"132","severity":1,"message":"141","line":15,"column":8,"nodeType":"134","endLine":15,"endColumn":10,"suggestions":"142"},{"ruleId":"136","severity":1,"message":"137","line":25,"column":25,"nodeType":"138","messageId":"139","endLine":25,"endColumn":27},{"ruleId":"136","severity":1,"message":"137","line":61,"column":30,"nodeType":"138","messageId":"139","endLine":61,"endColumn":32},{"ruleId":"136","severity":1,"message":"137","line":64,"column":17,"nodeType":"138","messageId":"139","endLine":64,"endColumn":19},{"ruleId":"132","severity":1,"message":"143","line":31,"column":5,"nodeType":"134","endLine":31,"endColumn":7,"suggestions":"144"},{"ruleId":"132","severity":1,"message":"145","line":43,"column":8,"nodeType":"134","endLine":43,"endColumn":18,"suggestions":"146"},{"ruleId":"136","severity":1,"message":"137","line":60,"column":28,"nodeType":"138","messageId":"139","endLine":60,"endColumn":30},{"ruleId":"136","severity":1,"message":"137","line":63,"column":16,"nodeType":"138","messageId":"139","endLine":63,"endColumn":18},{"ruleId":"125","severity":1,"message":"147","line":4,"column":10,"nodeType":"127","messageId":"128","endLine":4,"endColumn":20},{"ruleId":"125","severity":1,"message":"148","line":8,"column":9,"nodeType":"127","messageId":"128","endLine":8,"endColumn":12},{"ruleId":"125","severity":1,"message":"149","line":8,"column":14,"nodeType":"127","messageId":"128","endLine":8,"endColumn":22},{"ruleId":"125","severity":1,"message":"150","line":9,"column":8,"nodeType":"127","messageId":"128","endLine":9,"endColumn":16},{"ruleId":"151","severity":1,"message":"152","line":21,"column":7,"nodeType":"153","endLine":21,"endColumn":29},{"ruleId":"125","severity":1,"message":"154","line":8,"column":8,"nodeType":"127","messageId":"128","endLine":8,"endColumn":13},{"ruleId":"125","severity":1,"message":"154","line":1,"column":8,"nodeType":"127","messageId":"128","endLine":1,"endColumn":13},{"ruleId":"125","severity":1,"message":"154","line":1,"column":8,"nodeType":"127","messageId":"128","endLine":1,"endColumn":13},{"ruleId":"125","severity":1,"message":"155","line":1,"column":17,"nodeType":"127","messageId":"128","endLine":1,"endColumn":25},"no-unused-vars","'postVideoPos' is defined but never used.","Identifier","unusedVar","'setControls' is assigned a value but never used.","'position' is assigned a value but never used.","'setPosition' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'checkInvite', 'fetchData', and 'sync'. Either include them or remove the dependency array.","ArrayExpression",["156"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'compareProgress' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'checker'. Either include it or remove the dependency array.",["157"],"React Hook useEffect has a missing dependency: 'roomname'. Either include it or remove the dependency array.",["158"],"React Hook useEffect has a missing dependency: 'getUserName'. Either include it or remove the dependency array.",["159"],"'createRoom' is defined but never used.","'inp' is assigned a value but never used.","'setInput' is assigned a value but never used.","'navigate' is assigned a value but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","'React' is defined but never used.","'useState' is defined but never used.",{"desc":"160","fix":"161"},{"desc":"162","fix":"163"},{"desc":"164","fix":"165"},{"desc":"166","fix":"167"},"Update the dependencies array to be: [checkInvite, fetchData, sync]",{"range":"168","text":"169"},"Update the dependencies array to be: [checker]",{"range":"170","text":"171"},"Update the dependencies array to be: [roomname]",{"range":"172","text":"173"},"Update the dependencies array to be: [chatData, getUserName]",{"range":"174","text":"175"},[1527,1529],"[checkInvite, fetchData, sync]",[471,473],"[checker]",[849,851],"[roomname]",[1231,1241],"[chatData, getUserName]"]