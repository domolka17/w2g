[{"D:\\wum\\w2g2022-web\\src\\index.js":"1","D:\\wum\\w2g2022-web\\src\\App.js":"2","D:\\wum\\w2g2022-web\\src\\reportWebVitals.js":"3","D:\\wum\\w2g2022-web\\src\\components\\Host.js":"4","D:\\wum\\w2g2022-web\\src\\components\\Watchparty.js":"5","D:\\wum\\w2g2022-web\\src\\components\\Chat.js":"6","D:\\wum\\w2g2022-web\\src\\components\\UserCreateSide.js":"7","D:\\wum\\w2g2022-web\\src\\components\\NotFound.js":"8","D:\\wum\\w2g2022-web\\src\\components\\Navbar.js":"9","D:\\wum\\w2g2022-web\\src\\components\\about.js":"10","D:\\wum\\w2g2022-web\\src\\components\\Help.js":"11","D:\\wum\\w2g2022-web\\src\\components\\Startseite.js":"12","D:\\wum\\w2g2022-web\\src\\components\\Room.js":"13","D:\\wum\\w2g2022-web\\src\\components\\Controller\\RoomController.js":"14","D:\\wum\\w2g2022-web\\src\\components\\Controller\\UserController.js":"15","D:\\wum\\w2g2022-web\\src\\components\\Controller\\ChatController.js":"16","D:\\wum\\w2g2022-web\\src\\components\\Controller\\VideoController.js":"17","D:\\wum\\w2g2022-web\\src\\components\\NavbarElements.js":"18"},{"size":535,"mtime":1657915525000,"results":"19","hashOfConfig":"20"},{"size":2287,"mtime":1662559084753,"results":"21","hashOfConfig":"20"},{"size":362,"mtime":1657915525000,"results":"22","hashOfConfig":"20"},{"size":890,"mtime":1657915525000,"results":"23","hashOfConfig":"20"},{"size":5016,"mtime":1663593289320,"results":"24","hashOfConfig":"20"},{"size":4688,"mtime":1663427336949,"results":"25","hashOfConfig":"20"},{"size":1966,"mtime":1662119380249,"results":"26","hashOfConfig":"20"},{"size":192,"mtime":1661954825740,"results":"27","hashOfConfig":"20"},{"size":2691,"mtime":1663075049913,"results":"28","hashOfConfig":"20"},{"size":656,"mtime":1662985260564,"results":"29","hashOfConfig":"20"},{"size":1309,"mtime":1662985260536,"results":"30","hashOfConfig":"20"},{"size":1675,"mtime":1662985260563,"results":"31","hashOfConfig":"20"},{"size":2342,"mtime":1663593743956,"results":"32","hashOfConfig":"20"},{"size":1373,"mtime":1662213269133,"results":"33","hashOfConfig":"20"},{"size":915,"mtime":1662212358099,"results":"34","hashOfConfig":"20"},{"size":460,"mtime":1662646144086,"results":"35","hashOfConfig":"20"},{"size":2545,"mtime":1662212442208,"results":"36","hashOfConfig":"20"},{"size":2473,"mtime":1663075049916,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"lg6mx3",{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\wum\\w2g2022-web\\src\\index.js",[],[],"D:\\wum\\w2g2022-web\\src\\App.js",["94","95"],[],"D:\\wum\\w2g2022-web\\src\\reportWebVitals.js",[],[],"D:\\wum\\w2g2022-web\\src\\components\\Host.js",["96","97","98","99","100"],[],"D:\\wum\\w2g2022-web\\src\\components\\Watchparty.js",["101","102","103","104","105","106","107","108","109"],[],"import React, { useState, useEffect } from 'react';\r\nimport \"./css/watchparty.css\";\r\nimport { useNavigate } from \"react-router-dom\"\r\nimport { joinRoom, leaveRoom } from './Controller/RoomController';\r\nimport ReactPlayer from 'react-player';\r\nimport { getVideo, getVideoPos, getVideoStat, postVideo, postVideoPos, postVideoStat } from './Controller/VideoController';\r\nimport { useParams } from 'react-router-dom';\r\nimport Chat from './Chat';\r\n\r\n\r\nconst Watchparty = () => {\t\t// room siplay with userlist of rpp\r\n\tconst [link, setLink] = useState('')\r\n\tconst {roomid} = useParams()\r\n\tconst navigate = useNavigate()\r\n\tconst roomname = sessionStorage.getItem('roomname')\r\n\t//player stats\r\n\tconst [url, setUrl] = useState(null)\r\n\tconst [playing, setPlaying] = useState(false)\r\n\tconst [controls, setControls] = useState(true)\r\n\tconst [position, setPosition] = useState(0)\r\n\tconst [progress, setProgress] = useState({ played: 0, playedSeconds: 0, loaded: 0, loadedSeconds: 0 })\r\n\r\n\t//handlers\r\n\tconst handlePlay = () => {\r\n\t\tconsole.log('onPlay')\r\n\r\n\t\tpostVideoStat('playing')\r\n\t}\r\n\tconst handlePause = () => {\r\n\t\tconsole.log('onPause')\r\n\t\tpostVideoStat('paused')\r\n\t}\r\n\r\n\tconst handleProgress=(pro)=>{\r\n\t\tconsole.log('pro')\r\n\t\tsetProgress(pro)\r\n\t\tconsole.log(progress)\r\n\t}\r\n\r\n\t// constantly snyc once every 3 sekonds\r\n\tuseEffect(() => {\r\n\t\tconsole.log(\"test check\")\r\n\t\tcheckInvite()\r\n\t\tconst interval = setInterval(() => {\r\n\t\t\tsync()\r\n\t\t\tfetchData()\r\n\t\t}, 3000);\r\n\t\treturn () => clearInterval(interval);\r\n\t}, []);\r\n\t//---------------------------------------\r\n\t// on load check\r\n\tconst checkInvite=()=>{\r\n\t\tif(sessionStorage.getItem('id')== null)\r\n\t\t{\r\n\t\t\twindow.sessionStorage.setItem(\"redirect\", roomid)\r\n\t\t\tnavigate('/UserCreateSide')\r\n\t\t}\r\n\t\tif(sessionStorage.getItem('id')!= null && sessionStorage.getItem('roomname')== null)\r\n\t\t{\r\n\t\t\tjoinRoom(roomid)\r\n\t\t\tnavigate('/Watchparty/'+roomid)\r\n\t\t}\r\n\t}\r\n\r\n\t//---------------------------------------\r\n\t// buttons\r\n\tconst handleButton = () => {\t\t// gives button its funktion leave, submit video\r\n\t\tsetUrl(link)\r\n\t\tpostVideo(link)\r\n\t\tconsole.log(url)\r\n\t\tconsole.log(window.location.href)\r\n\t}\r\n\tconst handleButton2 = () => {\t\t// gives button its funktion, leave Room\r\n\t\tleaveRoom(sessionStorage.getItem('roomname'))\r\n\t\tsessionStorage.removeItem('url')\r\n\t\tsessionStorage.removeItem('stat')\r\n\t\tnavigate('/Room')\r\n\t}\r\n\r\n\r\n\t// syncs\r\n\t// calls multiple functions, which shouls sync different aspects of the player\r\n\tconst sync = async () => {\t\t//  the room should update, url, position\r\n\t\tsyncUrl()\r\n\t\tcompareState()\r\n\t}\r\n\t// takes value of getVideo and sets it as room(user) url, when url = compare nothing happens to the player, if compare was differen the player changes \r\n\tconst syncUrl = () => {\r\n\t\tconst compare = getVideo()\r\n\t\tsetUrl(compare)\r\n\t\tsessionStorage.setItem(\"url\", url)\r\n\t\treturn true\r\n\t}\r\n\t// should get the status of the video and paus/play the video, but doesnt work\r\n\tconst compareState = () => {\r\n\t\tconst a = getVideoStat()\r\n\t\tif (a == 'playing') {\r\n\t\t\tsetPlaying(true)\r\n\t\t}\r\n\t\tif (a == 'paused') {\r\n\t\t\tsetPlaying(false)\r\n\t\t}\r\n\t}\r\n\t// gets the video Podition of the server\r\n\tconst comparePos = () => {\r\n\t\tconst b = getVideoPos()\r\n\t}\r\n\r\n\t//_____________________________________________________________________________________________\r\n\t// user list\r\n\tconst [data, getData] = useState([])\r\n\tconst URL = 'https://gruppe13.toni-barth.com/rooms/' + roomname + '/users';\r\n\r\n\r\n\r\n\tconst fetchData = () => {\r\n\t\tfetch(URL)\r\n\t\t\t.then((res) =>\r\n\t\t\t\tres.json())\r\n\t\t\t.then((response) => {\r\n\t\t\t\tconsole.log(response.users);\r\n\t\t\t\tgetData(response.users);\r\n\t\t\t})\r\n\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<body class=\"home\">\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<div class=\"partytitle_text\">\r\n\t\t\t\t\t\t<h1 class=\"party_title\">Raum: {roomname} </h1>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"player\">\r\n\t\t\t\t\t\t<ReactPlayer\r\n\r\n\t\t\t\t\t\t\tclassName='react-player'\r\n\t\t\t\t\t\t\twidth={1280}\r\n\t\t\t\t\t\t\theight={720}\r\n\t\t\t\t\t\t\turl={url}\r\n\t\t\t\t\t\t\tplaying={playing}\r\n\t\t\t\t\t\t\tcontrols={controls}\r\n\t\t\t\t\t\t\tonReady={() => console.log('onReady')}\r\n\t\t\t\t\t\t\tonStart={() => console.log('onStart')}\r\n\t\t\t\t\t\t\tonPlay={() => handlePlay()}\r\n\t\t\t\t\t\t\tonPause={() => handlePause()}\r\n\t\t\t\t\t\t\tonBuffer={() => console.log('onBuffer')}\r\n\t\t\t\t\t\t\tonProgress={(pro)=> handleProgress(pro)}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<p class=\"users\">Nutzer in dieser Watchparty:</p>\r\n\t\t\t\t\t\t\t<p class=\"user_list\">\r\n\t\t\t\t\t\t\t\t{data.map((user) => (\r\n\t\t\t\t\t\t\t\t\t<tr key={user.id}>\r\n\t\t\t\t\t\t\t\t\t\t<td>{user.name}</td>\r\n\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"links\">\r\n\t\t\t\t\t\t<input type=\"text\" name=\"roomname\" class=\"link_box\" placeholder=\"Link einfügen\" value={link} onChange={(change) => setLink(change.target.value)}></input>\r\n\t\t\t\t\t\t<button onClick={event => handleButton()} className=\"link_submit\">Starten\t</button>\r\n\t\t\t\t\t\t<button onClick={event => handleButton2()} className=\"link_leave\">Raum Verlassen</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<div class=\"chat\">\r\n\t\t\t\t\t\t<Chat/>\r\n\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t\t</div>\r\n\t\t\t</body>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Watchparty\r\n","D:\\wum\\w2g2022-web\\src\\components\\Chat.js",["110","111","112","113"],[],"/**\r\n *  Chat window\r\n *  TODO manages Chat\r\n *  TODO uses get and posts\r\n *  TODO exports it selfe, needs css style\r\n *  TODO writing message and submit it\r\n * \r\n */\r\n\r\nimport React, { useEffect, useState } from 'react'\r\nimport {  chatPost } from './Controller/ChatController'\r\nimport \"./css/Chat.css\";\r\n\r\n\r\nconst Chat = () => {\r\n    const [messageList, getListData]= useState([])\r\n    const [message, setMessage] = useState('')\r\n    const [chatData, getChatData]= useState([])\r\n    const [userData, getUserData] = useState([])\r\n    const roomname = sessionStorage.getItem('roomname')\r\n\r\n    useEffect(() => {\r\n\r\n   \r\n        const interval = setInterval(() => {\r\n                fetchChatData(roomname)\r\n                fetchUserData(roomname)\r\n                console.log('Update Chat')\r\n\t\t}, 3000);\r\n\t\treturn () => clearInterval(interval);\r\n\t}, []);\r\n\r\n    useEffect(()=>{\r\n        console.log(chatData)\r\n        if(chatData.length>0){\r\n            let temp =[]\r\n            for(let i = 0; i<chatData.length; i++) {\r\n                const user = getUserName(chatData[i])\r\n                temp[i]=  { author: user, text: chatData[i].text, time: chatData[i].time}\r\n            }\r\n            getListData(temp)\r\n        }\r\n    }, [chatData]);\r\n\r\n    useEffect(()=>{\r\n        console.log(messageList)\r\n    }, [messageList]);\r\n\r\n\r\n    // submit message button\r\n    const handleButton = ()=>{\r\n        chatPost(message, sessionStorage.getItem('roomname'))\r\n        // after posting message, emptys message-input\r\n        setTimeout(function () {\r\n            setMessage('')\r\n        }, 500)\r\n    }\r\n    const getUserName=(userID)=>{\r\n        const user = userData.find((item)=>{\r\n            return item.id == userID.userId\r\n        })\r\n        let ret\r\n        if(user== undefined){\r\n            console.log(user)\r\n            ret='deleted User'\r\n        }\r\n        else{\r\n            ret=user.name\r\n        }\r\n        return ret\r\n    }\r\n\r\n    /** \r\n    const convertChat=()=>{\r\n        \r\n        var check = false\r\n        var temp = [{author: 'user', text:'item.text', time: 'item.time'}]\r\n\r\n        chatData.forEach((item)=>{\r\n            \r\n            //cheks if user is in room, if nut user.name= undefined\r\n            const user = userData.find((person=>{\r\n                return person.id == item.userId}))\r\n            console.log(user)\r\n            // as a standart\r\n            var username=\"deleted User\"\r\n\r\n            // if user is in userlist / in room\r\n            if(user!=undefined)\r\n            {\r\n                username= user.name\r\n            }\r\n\r\n            // cleanes up the initial array + assings the first slot/ the scond if the first is a real message\r\n            if(temp.length==1){\r\n                if(temp[0].time=='item.time'){\r\n                    temp[0]= {author: username, text: item.text, time: item.time}\r\n                    const t = {author: username, text: item.text, time: item.time}\r\n                }\r\n                else{\r\n                    temp[1]= {author: username, text: item.text, time: item.time}\r\n                    \r\n                }\r\n                //other cheks wont trigger for this.item if this is true\r\n                check= true\r\n            }\r\n            // prosseses the other objects in chatData \r\n            if(temp.length>1 && check==false)\r\n            {\r\n                temp[temp.length]= {author: username, text: item.text, time: item.time}\r\n            }\r\n\r\n            check=false\r\n\r\n        })\r\n        console.log(temp)\r\n    }\r\n    */\r\n    //____________________________\r\n\r\n    const fetchChatData = (roomname) => {\r\n        \r\n        fetch('https://gruppe13.toni-barth.com/rooms/'+roomname+'/chat', {\r\n            method:'GET'\r\n        }).then((res) =>\r\n        res.json()).then((response)=> {\r\n            getChatData(response.messages);\r\n        \r\n        })\r\n        \r\n    }\r\n\r\n    const fetchUserData = (roomname) => {\r\n\t\tfetch('https://gruppe13.toni-barth.com/rooms/' + roomname + '/users')\r\n\t\t\t.then((res) =>\r\n\t\t\t\tres.json())\r\n\t\t\t.then((response) => {\r\n\t\t\t\tgetUserData(response.users);\r\n                \r\n\t\t\t})\r\n\r\n\t}\r\n    \r\n  return (\r\n    <div className='ChatBox'>\r\n        <div className='messageBox'>\r\n\t\t\t{messageList.map( line => <ul className='massage' key={line.time}>{line.author+': '+line.text}</ul>)}\r\n        </div>\r\n        <div className='ChatSubmitbar'>\r\n            <input type=\"text\"  class=\"submit\" placeholder=\"Narricht schreiben\" value={message} onChange={(change) => setMessage(change.target.value)}></input>\r\n            <button onClick={event => handleButton()} className=\"message_submit\">Send</button>\r\n       \r\n        </div>\r\n    </div>\r\n    \r\n  )\r\n}\r\n\r\nexport default Chat","D:\\wum\\w2g2022-web\\src\\components\\UserCreateSide.js",[],[],"D:\\wum\\w2g2022-web\\src\\components\\NotFound.js",[],[],"D:\\wum\\w2g2022-web\\src\\components\\Navbar.js",[],[],"D:\\wum\\w2g2022-web\\src\\components\\about.js",[],[],"D:\\wum\\w2g2022-web\\src\\components\\Help.js",[],[],"D:\\wum\\w2g2022-web\\src\\components\\Startseite.js",[],[],"D:\\wum\\w2g2022-web\\src\\components\\Room.js",[],[],"D:\\wum\\w2g2022-web\\src\\components\\Controller\\RoomController.js",["114"],[],"D:\\wum\\w2g2022-web\\src\\components\\Controller\\UserController.js",[],[],"D:\\wum\\w2g2022-web\\src\\components\\Controller\\ChatController.js",["115"],[],"D:\\wum\\w2g2022-web\\src\\components\\Controller\\VideoController.js",["116","117"],[],"D:\\wum\\w2g2022-web\\src\\components\\NavbarElements.js",[],[],{"ruleId":"118","severity":1,"message":"119","line":12,"column":10,"nodeType":"120","messageId":"121","endLine":12,"endColumn":20},{"ruleId":"122","severity":1,"message":"123","line":57,"column":48,"nodeType":"124","messageId":"125","endLine":58,"endColumn":7},{"ruleId":"118","severity":1,"message":"126","line":4,"column":10,"nodeType":"120","messageId":"121","endLine":4,"endColumn":20},{"ruleId":"118","severity":1,"message":"127","line":8,"column":9,"nodeType":"120","messageId":"121","endLine":8,"endColumn":12},{"ruleId":"118","severity":1,"message":"128","line":8,"column":14,"nodeType":"120","messageId":"121","endLine":8,"endColumn":22},{"ruleId":"118","severity":1,"message":"129","line":9,"column":8,"nodeType":"120","messageId":"121","endLine":9,"endColumn":16},{"ruleId":"130","severity":1,"message":"131","line":21,"column":7,"nodeType":"132","endLine":21,"endColumn":29},{"ruleId":"118","severity":1,"message":"133","line":6,"column":58,"nodeType":"120","messageId":"121","endLine":6,"endColumn":70},{"ruleId":"118","severity":1,"message":"134","line":19,"column":19,"nodeType":"120","messageId":"121","endLine":19,"endColumn":30},{"ruleId":"118","severity":1,"message":"135","line":20,"column":9,"nodeType":"120","messageId":"121","endLine":20,"endColumn":17},{"ruleId":"118","severity":1,"message":"136","line":20,"column":19,"nodeType":"120","messageId":"121","endLine":20,"endColumn":30},{"ruleId":"137","severity":1,"message":"138","line":49,"column":5,"nodeType":"139","endLine":49,"endColumn":7,"suggestions":"140"},{"ruleId":"141","severity":1,"message":"142","line":97,"column":9,"nodeType":"143","messageId":"144","endLine":97,"endColumn":11},{"ruleId":"141","severity":1,"message":"142","line":100,"column":9,"nodeType":"143","messageId":"144","endLine":100,"endColumn":11},{"ruleId":"118","severity":1,"message":"145","line":105,"column":8,"nodeType":"120","messageId":"121","endLine":105,"endColumn":18},{"ruleId":"118","severity":1,"message":"146","line":106,"column":9,"nodeType":"120","messageId":"121","endLine":106,"endColumn":10},{"ruleId":"137","severity":1,"message":"147","line":31,"column":5,"nodeType":"139","endLine":31,"endColumn":7,"suggestions":"148"},{"ruleId":"137","severity":1,"message":"149","line":43,"column":8,"nodeType":"139","endLine":43,"endColumn":18,"suggestions":"150"},{"ruleId":"141","severity":1,"message":"142","line":60,"column":28,"nodeType":"143","messageId":"144","endLine":60,"endColumn":30},{"ruleId":"141","severity":1,"message":"142","line":63,"column":16,"nodeType":"143","messageId":"144","endLine":63,"endColumn":18},{"ruleId":"118","severity":1,"message":"151","line":8,"column":8,"nodeType":"120","messageId":"121","endLine":8,"endColumn":13},{"ruleId":"118","severity":1,"message":"151","line":1,"column":8,"nodeType":"120","messageId":"121","endLine":1,"endColumn":13},{"ruleId":"118","severity":1,"message":"151","line":1,"column":8,"nodeType":"120","messageId":"121","endLine":1,"endColumn":13},{"ruleId":"118","severity":1,"message":"152","line":1,"column":17,"nodeType":"120","messageId":"121","endLine":1,"endColumn":25},"no-unused-vars","'deleteUser' is defined but never used.","Identifier","unusedVar","react/jsx-no-comment-textnodes","Comments inside children section of tag should be placed inside braces","JSXText","putCommentInBraces","'createRoom' is defined but never used.","'inp' is assigned a value but never used.","'setInput' is assigned a value but never used.","'navigate' is assigned a value but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","'postVideoPos' is defined but never used.","'setControls' is assigned a value but never used.","'position' is assigned a value but never used.","'setPosition' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'checkInvite', 'fetchData', and 'sync'. Either include them or remove the dependency array.","ArrayExpression",["153"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'comparePos' is assigned a value but never used.","'b' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'roomname'. Either include it or remove the dependency array.",["154"],"React Hook useEffect has a missing dependency: 'getUserName'. Either include it or remove the dependency array.",["155"],"'React' is defined but never used.","'useState' is defined but never used.",{"desc":"156","fix":"157"},{"desc":"158","fix":"159"},{"desc":"160","fix":"161"},"Update the dependencies array to be: [checkInvite, fetchData, sync]",{"range":"162","text":"163"},"Update the dependencies array to be: [roomname]",{"range":"164","text":"165"},"Update the dependencies array to be: [chatData, getUserName]",{"range":"166","text":"167"},[1502,1504],"[checkInvite, fetchData, sync]",[849,851],"[roomname]",[1231,1241],"[chatData, getUserName]"]