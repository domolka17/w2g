[{"D:\\wum\\w2g2022-web\\src\\index.js":"1","D:\\wum\\w2g2022-web\\src\\App.js":"2","D:\\wum\\w2g2022-web\\src\\reportWebVitals.js":"3","D:\\wum\\w2g2022-web\\src\\components\\Host.js":"4","D:\\wum\\w2g2022-web\\src\\components\\Watchparty.js":"5","D:\\wum\\w2g2022-web\\src\\components\\Chat.js":"6","D:\\wum\\w2g2022-web\\src\\components\\UserCreateSide.js":"7","D:\\wum\\w2g2022-web\\src\\components\\NotFound.js":"8","D:\\wum\\w2g2022-web\\src\\components\\Navbar.js":"9","D:\\wum\\w2g2022-web\\src\\components\\about.js":"10","D:\\wum\\w2g2022-web\\src\\components\\Help.js":"11","D:\\wum\\w2g2022-web\\src\\components\\Startseite.js":"12","D:\\wum\\w2g2022-web\\src\\components\\Room.js":"13","D:\\wum\\w2g2022-web\\src\\components\\Controller\\RoomController.js":"14","D:\\wum\\w2g2022-web\\src\\components\\Controller\\UserController.js":"15","D:\\wum\\w2g2022-web\\src\\components\\Controller\\ChatController.js":"16","D:\\wum\\w2g2022-web\\src\\components\\Controller\\VideoController.js":"17","D:\\wum\\w2g2022-web\\src\\components\\NavbarElements.js":"18"},{"size":535,"mtime":1657915525000,"results":"19","hashOfConfig":"20"},{"size":2287,"mtime":1662559084753,"results":"21","hashOfConfig":"20"},{"size":362,"mtime":1657915525000,"results":"22","hashOfConfig":"20"},{"size":890,"mtime":1657915525000,"results":"23","hashOfConfig":"20"},{"size":5005,"mtime":1663075256154,"results":"24","hashOfConfig":"20"},{"size":4725,"mtime":1663081493995,"results":"25","hashOfConfig":"20"},{"size":1966,"mtime":1662119380249,"results":"26","hashOfConfig":"20"},{"size":192,"mtime":1661954825740,"results":"27","hashOfConfig":"20"},{"size":2691,"mtime":1663075049913,"results":"28","hashOfConfig":"20"},{"size":656,"mtime":1662985260564,"results":"29","hashOfConfig":"20"},{"size":1309,"mtime":1662985260536,"results":"30","hashOfConfig":"20"},{"size":1675,"mtime":1662985260563,"results":"31","hashOfConfig":"20"},{"size":2249,"mtime":1662985260555,"results":"32","hashOfConfig":"20"},{"size":1373,"mtime":1662213269133,"results":"33","hashOfConfig":"20"},{"size":915,"mtime":1662212358099,"results":"34","hashOfConfig":"20"},{"size":460,"mtime":1662646144086,"results":"35","hashOfConfig":"20"},{"size":2545,"mtime":1662212442208,"results":"36","hashOfConfig":"20"},{"size":2473,"mtime":1663075049916,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},"id1gps",{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"41"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"41"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"41"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"93"},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"41"},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},"D:\\wum\\w2g2022-web\\src\\index.js",[],[],[],"D:\\wum\\w2g2022-web\\src\\App.js",["101","102"],[],"import React, { useEffect } from \"react\";\nimport './App.css';\nimport './components/css/navbar.css'\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport Navbar from './components/Navbar';\nimport Home from './components/Startseite';\nimport About from './components/about';\nimport Help from './components/Help';\nimport Room from './components/Room';\nimport Host from \"./components/Host\";\nimport Watchparty from \"./components/Watchparty\";\nimport { deleteUser } from \"./components/Controller/UserController\";\nimport { leaveRoom } from \"./components/Controller/RoomController\";\nimport UserCreatrSide from \"./components/UserCreateSide\";\nimport { NotFound } from \"./components/NotFound\";\nimport Chat from \"./components/Chat\";\n\n\nfunction App() {\n  useEffect(() => {\n    window.addEventListener('beforeunload', alertUser)\n    window.addEventListener('unload', handleTabClosing)\n    return () => {\n      window.removeEventListener('beforeunload', alertUser)\n      window.removeEventListener('unload', handleTabClosing)\n    }\n})\nconst handleTabClosing = () => {\n  logOut(sessionStorage.getItem('id'))\n}\nconst alertUser = (event) => {\n  event.preventDefault()\n  event.returnValue = ''\n  // not lösung, nutzer werden sonst nie gelöscht bei verlassen der Seite\n  leaveRoom( sessionStorage.getItem('roomname'))\n  logOut(sessionStorage.getItem('id'))\n}\nconst logOut = (id)=>{\n  const url = 'https://gruppe13.toni-barth.com/users/'\n  fetch(url+ id, {\n    method:'DELETE', headers:{\"Content-Type\": \"application/json\"}\n  }).then(sessionStorage.clear())\n}\n  return (\n    <Router>\n      <Navbar />\n      <Routes>\n        <Route exact path='/' element={<Home />} />\n        <Route path='/index' element={<Home />} />\n        <Route path='/about' element={<About />} />\n        <Route path='/Help' element={<Help />} />\n        <Route path=\"/Room\" element={<Room/>}/>\n        <Route path=\"/Host\" element={<Host/>}/>\n        <Route path=\"/Watchparty/:roomid\" element={<Watchparty/>}/>\n        <Route path=\"/UserCreateSide\" element={<UserCreatrSide/>}/>\n        <Route path=\"/Chat\" element={<Chat/>}/>\n        <Route path=\"*\" element={<NotFound/>}/>                             // routes any unknown location to Not found \n      </Routes>\n    </Router>\n  );\n}\n\nexport default App;\n\n","D:\\wum\\w2g2022-web\\src\\reportWebVitals.js",[],[],"D:\\wum\\w2g2022-web\\src\\components\\Host.js",["103","104","105","106","107"],[],"import React, { useState } from 'react'\nimport \"./css/host.css\";\nimport {useNavigate} from \"react-router-dom\"\nimport { createRoom } from \"./Controller/RoomController\";\nimport { deleteUser } from './Controller/UserController';\n\nconst  Host = () => {\n\tconst [inp, setInput] = useState('')\n\tconst navigate = useNavigate()\n\tconst  handleButton = async () => {\t\t// gives button its funktion\n\t\tfor(let i =0; i<100;i++)\n\t\t{\n\t\t\tdeleteUser(i)\n\t\t}\n\t}\n\treturn (\n\t\t<>\n\t\t\t<body>\n\t\t\t\t<div>\n\t\t\t\t\t<div class=\"hosttitle_text\">\n\t\t\t\t\t\t<h1 class=\"hosttitle\"></h1>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"host_text\">\n\t\t\t\t\t\t<p class=\"host_textbox\">Drücken um Alle User zu löschen</p>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"input\">\n\t\t\t\t\t\t<div class=\"zwei\">\n\t\t\t\t\t\t\t<button onClick={event => handleButton()} className=\"host_button\">Delete ALL</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</body>\n\t\t</>\n\t);\n};\n\nexport default Host;\n","D:\\wum\\w2g2022-web\\src\\components\\Watchparty.js",["108","109","110","111","112","113","114","115","116","117","118","119","120","121","122","123"],[],"import React, { useState, useEffect } from 'react';\r\nimport \"./css/watchparty.css\";\r\nimport { Route, useNavigate } from \"react-router-dom\"\r\nimport { joinRoom, leaveRoom } from './Controller/RoomController';\r\nimport ReactPlayer from 'react-player';\r\nimport { getVideo, getVideoPos, getVideoStat, postVideo, postVideoPos, postVideoStat } from './Controller/VideoController';\r\nimport { useParams } from 'react-router-dom';\r\nimport Chat from './Chat';\r\n\r\n\r\nconst Watchparty = () => {\t\t// room siplay with userlist of rpp\r\n\tconst firstUrl = 'https://www.youtube.com/watch?v=Q0B5dLHDQ2w'\r\n\tconst [link, setLink] = useState('')\r\n\tconst {roomid} = useParams()\r\n\tconst navigate = useNavigate()\r\n\tconst unsername = sessionStorage.getItem('name')\r\n\tconst id = sessionStorage.getItem('id')\r\n\tconst roomname = sessionStorage.getItem('roomname')\r\n\tconst [first, setFirst] = useState(true)\r\n\t//player stats\r\n\tconst [url, setUrl] = useState(null)\r\n\tconst [playing, setPlaying] = useState(false)\r\n\tconst [controls, setControls] = useState(true)\r\n\tconst [position, setPosition] = useState(0)\r\n\r\n\t//handlers\r\n\tconst handlePlay = () => {\r\n\t\tconsole.log('onPlay')\r\n\r\n\t\tpostVideoStat('playing')\r\n\t}\r\n\tconst handlePause = () => {\r\n\t\tconsole.log('onPause')\r\n\t\tpostVideoStat('paused')\r\n\t}\r\n\r\n\t// constantly snyc once every 3 sekonds\r\n\tuseEffect(() => {\r\n\t\tconsole.log(\"test check\")\r\n\t\tcheckInvite()\r\n\t\tconst interval = setInterval(() => {\r\n\t\t\tsync()\r\n\t\t\tfetchData()\r\n\t\t}, 3000);\r\n\t\treturn () => clearInterval(interval);\r\n\t}, []);\r\n\t//---------------------------------------\r\n\t// on load check\r\n\tconst checkInvite=()=>{\r\n\t\tif(sessionStorage.getItem('id')== null)\r\n\t\t{\r\n\t\t\twindow.sessionStorage.setItem(\"redirect\", roomid)\r\n\t\t\tnavigate('/UserCreateSide')\r\n\t\t}\r\n\t\tif(sessionStorage.getItem('id')!= null && sessionStorage.getItem('roomname')== null)\r\n\t\t{\r\n\t\t\tjoinRoom(roomid)\r\n\t\t\tnavigate('/Watchparty/'+roomid)\r\n\t\t}\r\n\t}\r\n\r\n\t//---------------------------------------\r\n\t// buttons\r\n\tconst handleButton = () => {\t\t// gives button its funktion leave, submit video\r\n\t\tsetUrl(link)\r\n\t\tpostVideo(link)\r\n\t\tconsole.log(url)\r\n\t\tconsole.log(window.location.href)\r\n\t}\r\n\tconst handleButton2 = () => {\t\t// gives button its funktion, leave Room\r\n\t\tleaveRoom(sessionStorage.getItem('roomname'))\r\n\t\tsessionStorage.removeItem('url')\r\n\t\tsessionStorage.removeItem('stat')\r\n\t\tnavigate('/Room')\r\n\t}\r\n\t// syncs\r\n\t// calls multiple functions, which shouls sync different aspects of the player\r\n\tconst sync = async () => {\t\t//  the room should update, url, position\r\n\t\tsyncUrl()\r\n\t\tcompareState()\r\n\t}\r\n\t// takes value of getVideo and sets it as room(user) url, when url = compare nothing happens to the player, if compare was differen the player changes \r\n\tconst syncUrl = () => {\r\n\t\tconst compare = getVideo()\r\n\t\tsetUrl(compare)\r\n\t\tsessionStorage.setItem(\"url\", url)\r\n\t\treturn true\r\n\t}\r\n\t// should get the status of the video and paus/play the video, but doesnt work\r\n\tconst compareState = () => {\r\n\t\tconst a = getVideoStat()\r\n\t\tif (a == 'playing') {\r\n\t\t\tsetPlaying(true)\r\n\t\t}\r\n\t\tif (a == 'paused') {\r\n\t\t\tsetPlaying(false)\r\n\t\t}\r\n\t}\r\n\t// gets the video Podition of the server\r\n\tconst comparePos = () => {\r\n\t\tconst b = getVideoPos()\r\n\t}\r\n\r\n\t//_____________________________________________________________________________________________\r\n\t// user list\r\n\tconst [data, getData] = useState([])\r\n\tconst URL = 'https://gruppe13.toni-barth.com/rooms/' + roomname + '/users';\r\n\r\n\tuseEffect(() => {\r\n\t\tfetchData()\r\n\t}, [])\r\n\r\n\r\n\tconst fetchData = () => {\r\n\t\tfetch(URL)\r\n\t\t\t.then((res) =>\r\n\t\t\t\tres.json())\r\n\t\t\t.then((response) => {\r\n\t\t\t\tconsole.log(response.users);\r\n\t\t\t\tgetData(response.users);\r\n\t\t\t})\r\n\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<body class=\"home\">\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<div class=\"partytitle_text\">\r\n\t\t\t\t\t\t<h1 class=\"party_title\">Raum: {roomname} </h1>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"player\">\r\n\t\t\t\t\t\t<ReactPlayer\r\n\r\n\t\t\t\t\t\t\tclassName='react-player'\r\n\t\t\t\t\t\t\twidth={1280}\r\n\t\t\t\t\t\t\theight={720}\r\n\t\t\t\t\t\t\turl={url}\r\n\t\t\t\t\t\t\tplaying={playing}\r\n\t\t\t\t\t\t\tcontrols={controls}\r\n\t\t\t\t\t\t\tonReady={() => console.log('onReady')}\r\n\t\t\t\t\t\t\tonStart={() => console.log('onStart')}\r\n\t\t\t\t\t\t\tonPlay={() => handlePlay()}\r\n\t\t\t\t\t\t\tonPause={() => handlePause()}\r\n\t\t\t\t\t\t\tonBuffer={() => console.log('onBuffer')}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<p class=\"users\">Nutzer in dieser Watchparty:</p>\r\n\t\t\t\t\t\t\t<p class=\"user_list\">\r\n\t\t\t\t\t\t\t\t{data.map((user) => (\r\n\t\t\t\t\t\t\t\t\t<tr key={user.id}>\r\n\t\t\t\t\t\t\t\t\t\t<td>{user.name}</td>\r\n\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"links\">\r\n\t\t\t\t\t\t<input type=\"text\" name=\"roomname\" class=\"link_box\" placeholder=\"Link einfügen\" value={link} onChange={(change) => setLink(change.target.value)}></input>\r\n\t\t\t\t\t\t<button onClick={event => handleButton()} className=\"link_submit\">Starten\t</button>\r\n\t\t\t\t\t\t<button onClick={event => handleButton2()} className=\"link_leave\">Raum Verlassen</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<div class=\"chat\">\r\n\t\t\t\t\t\t<Chat/>\r\n\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t\t</div>\r\n\t\t\t</body>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Watchparty\r\n",[],"D:\\wum\\w2g2022-web\\src\\components\\Chat.js",["124","125","126","127","128"],[],"D:\\wum\\w2g2022-web\\src\\components\\UserCreateSide.js",[],[],"D:\\wum\\w2g2022-web\\src\\components\\NotFound.js",[],[],"D:\\wum\\w2g2022-web\\src\\components\\Navbar.js",[],[],"D:\\wum\\w2g2022-web\\src\\components\\about.js",[],[],"D:\\wum\\w2g2022-web\\src\\components\\Help.js",[],[],"D:\\wum\\w2g2022-web\\src\\components\\Startseite.js",[],[],"D:\\wum\\w2g2022-web\\src\\components\\Room.js",[],[],"D:\\wum\\w2g2022-web\\src\\components\\Controller\\RoomController.js",["129"],[],"/*\n create Room should be done\n delete Room should be done\n join room should be done\n leave room should be done\n*/\n\nimport React from 'react'\n\n\n// collection of funktions related to the controll of a room\nconst url = 'https://gruppe13.toni-barth.com/rooms/'\n\n    export const createRoom =() => {\n        //put request, creation of room\n        fetch(url, {\n            method:'POST' ,\n            headers:{\"Content-Type\": \"application/json\"},             \n        })\n        //take respons, its the name of new room\n        .then( response => {\n           return response.json()})\n        .then (data => { joinRoom(data.name)\n        })  \n    }\n    export const joinRoom = (name) => {\n        // get roomname and user id put them in url\n        fetch(url + name +'/users', {\n            method:'PUT',\n            headers:{\"Content-Type\": \"application/json\"},\n            body:  JSON.stringify({\"user\": sessionStorage.getItem('id')})\n        })\n        window.sessionStorage.setItem(\"roomname\", name)\n    }\n    export const leaveRoom = (roomname) => {\n        // delete user from room\n        fetch(url +roomname+'/users', {\n          method:'DELETE',\n          headers:{\"Content-Type\": \"application/json\"},\n          body:  JSON.stringify({\"user\": sessionStorage.getItem('id')})\n      })\n        //update theUser\n        sessionStorage.removeItem('roomname');\n    }\n    \n\n\n","D:\\wum\\w2g2022-web\\src\\components\\Controller\\UserController.js",[],[],"D:\\wum\\w2g2022-web\\src\\components\\Controller\\ChatController.js",["130"],[],"import React from 'react'\r\n\r\n/**\r\n * get massage\r\n * put massage\r\n */\r\n\r\n\r\nconst url = 'https://gruppe13.toni-barth.com/rooms/'\r\n\r\n    export const chatPost = (data, roomname) => {\r\n        fetch(url+roomname+'/chat', {\r\n            method:'PUT',\r\n            headers:{\"Content-Type\": \"application/json\"},\r\n            body:  JSON.stringify({\"user\": sessionStorage.getItem('id'),\r\n                                   \"message\": data})\r\n        })\r\n    }\r\n\r\n    ",[],"D:\\wum\\w2g2022-web\\src\\components\\Controller\\VideoController.js",["131","132"],[],"import React, { useState } from 'react'\n/**\n * psot video  \n * get video\n * post / get status, pause, playing, position\n */\nconst roomurl = 'https://gruppe13.toni-barth.com/rooms/'\n  //  takes the url and sends it to the api, uses session userid and uses getVideo()  \n        // get video url, fetch video \n    export const postVideo = (url) => {\n        fetch(roomurl+sessionStorage.getItem('roomname') +'/video',{\n            method:'PUT',\n            headers:{\"Content-Type\": \"application/json\"}, \n            body:  JSON.stringify({\"user\": sessionStorage.getItem('id'),\"url\": url}),})\n            .then( (response) => { getVideo()} )\n    }\n \n    // saves the roomurl (in the api) to a sessionkey and returns it\n    export const getVideo = () => {\n        // get video url, fetch video url\n        fetch(roomurl + sessionStorage.getItem('roomname') + '/video')\n        .then(response => {return response.json()}).then(data => { sessionStorage.setItem(\"url\", data.url)})\n        return sessionStorage.getItem('url')\n    }\n    //saves room position from api of the api video to the session \n    export const getVideoPos = () => {          \n        // get video url, fetch video url\n        fetch(roomurl + sessionStorage.getItem('roomname') + '/position')\n        .then(response => {return response.json()}).then(data => { })\n        return sessionStorage.getItem('position')\n    }\n    // takes session positon and posts it to the api\n    export const postVideoPos = (pos) => {  //posts room position of video\n        // get video url, fetch video url\n        fetch(roomurl + sessionStorage.getItem('roomname') + '/position', {\n            method: 'PUT',\n            headers:{\"Content-Type\": \"application/json\"}, \n            body:  JSON.stringify({\"user\": sessionStorage.getItem('id'),\"position\": pos}),})\n    }\n\n    export const postVideoStat = (stat) => {  //posts room position of video\n        // get video url, fetch video url\n        fetch(roomurl + sessionStorage.getItem('roomname') + '/status', {\n            method: 'PUT',\n            headers:{\"Content-Type\": \"application/json\"}, \n            body:  JSON.stringify({\"user\": sessionStorage.getItem('id'),\"status\": stat}),\n        })\n    }\n\n    export const getVideoStat = () => {          \n        // get video url, fetch video url\n        fetch(roomurl + sessionStorage.getItem('roomname') + '/status')\n        .then(response => {return response.json()}).then(data => { sessionStorage.setItem(\"stat\", data.status)})\n\n        return sessionStorage.getItem('stat')\n    }\n    \n\n    \n\t\n","D:\\wum\\w2g2022-web\\src\\components\\NavbarElements.js",[],[],{"ruleId":"133","severity":1,"message":"134","line":12,"column":10,"nodeType":"135","messageId":"136","endLine":12,"endColumn":20},{"ruleId":"137","severity":1,"message":"138","line":57,"column":48,"nodeType":"139","messageId":"140","endLine":58,"endColumn":7},{"ruleId":"133","severity":1,"message":"141","line":4,"column":10,"nodeType":"135","messageId":"136","endLine":4,"endColumn":20},{"ruleId":"133","severity":1,"message":"142","line":8,"column":9,"nodeType":"135","messageId":"136","endLine":8,"endColumn":12},{"ruleId":"133","severity":1,"message":"143","line":8,"column":14,"nodeType":"135","messageId":"136","endLine":8,"endColumn":22},{"ruleId":"133","severity":1,"message":"144","line":9,"column":8,"nodeType":"135","messageId":"136","endLine":9,"endColumn":16},{"ruleId":"145","severity":1,"message":"146","line":21,"column":7,"nodeType":"147","endLine":21,"endColumn":29},{"ruleId":"133","severity":1,"message":"148","line":3,"column":10,"nodeType":"135","messageId":"136","endLine":3,"endColumn":15},{"ruleId":"133","severity":1,"message":"149","line":6,"column":58,"nodeType":"135","messageId":"136","endLine":6,"endColumn":70},{"ruleId":"133","severity":1,"message":"150","line":12,"column":8,"nodeType":"135","messageId":"136","endLine":12,"endColumn":16},{"ruleId":"133","severity":1,"message":"151","line":16,"column":8,"nodeType":"135","messageId":"136","endLine":16,"endColumn":17},{"ruleId":"133","severity":1,"message":"152","line":17,"column":8,"nodeType":"135","messageId":"136","endLine":17,"endColumn":10},{"ruleId":"133","severity":1,"message":"153","line":19,"column":9,"nodeType":"135","messageId":"136","endLine":19,"endColumn":14},{"ruleId":"133","severity":1,"message":"154","line":19,"column":16,"nodeType":"135","messageId":"136","endLine":19,"endColumn":24},{"ruleId":"133","severity":1,"message":"155","line":23,"column":19,"nodeType":"135","messageId":"136","endLine":23,"endColumn":30},{"ruleId":"133","severity":1,"message":"156","line":24,"column":9,"nodeType":"135","messageId":"136","endLine":24,"endColumn":17},{"ruleId":"133","severity":1,"message":"157","line":24,"column":19,"nodeType":"135","messageId":"136","endLine":24,"endColumn":30},{"ruleId":"158","severity":1,"message":"159","line":46,"column":5,"nodeType":"160","endLine":46,"endColumn":7,"suggestions":"161"},{"ruleId":"162","severity":1,"message":"163","line":92,"column":9,"nodeType":"164","messageId":"165","endLine":92,"endColumn":11},{"ruleId":"162","severity":1,"message":"163","line":95,"column":9,"nodeType":"164","messageId":"165","endLine":95,"endColumn":11},{"ruleId":"133","severity":1,"message":"166","line":100,"column":8,"nodeType":"135","messageId":"136","endLine":100,"endColumn":18},{"ruleId":"133","severity":1,"message":"167","line":101,"column":9,"nodeType":"135","messageId":"136","endLine":101,"endColumn":10},{"ruleId":"158","severity":1,"message":"168","line":111,"column":5,"nodeType":"160","endLine":111,"endColumn":7,"suggestions":"169"},{"ruleId":"133","severity":1,"message":"170","line":22,"column":9,"nodeType":"135","messageId":"136","endLine":22,"endColumn":17},{"ruleId":"158","severity":1,"message":"171","line":31,"column":5,"nodeType":"160","endLine":31,"endColumn":7,"suggestions":"172"},{"ruleId":"158","severity":1,"message":"173","line":43,"column":8,"nodeType":"160","endLine":43,"endColumn":18,"suggestions":"174"},{"ruleId":"162","severity":1,"message":"163","line":59,"column":28,"nodeType":"164","messageId":"165","endLine":59,"endColumn":30},{"ruleId":"162","severity":1,"message":"163","line":62,"column":16,"nodeType":"164","messageId":"165","endLine":62,"endColumn":18},{"ruleId":"133","severity":1,"message":"175","line":8,"column":8,"nodeType":"135","messageId":"136","endLine":8,"endColumn":13},{"ruleId":"133","severity":1,"message":"175","line":1,"column":8,"nodeType":"135","messageId":"136","endLine":1,"endColumn":13},{"ruleId":"133","severity":1,"message":"175","line":1,"column":8,"nodeType":"135","messageId":"136","endLine":1,"endColumn":13},{"ruleId":"133","severity":1,"message":"176","line":1,"column":17,"nodeType":"135","messageId":"136","endLine":1,"endColumn":25},"no-unused-vars","'deleteUser' is defined but never used.","Identifier","unusedVar","react/jsx-no-comment-textnodes","Comments inside children section of tag should be placed inside braces","JSXText","putCommentInBraces","'createRoom' is defined but never used.","'inp' is assigned a value but never used.","'setInput' is assigned a value but never used.","'navigate' is assigned a value but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","'Route' is defined but never used.","'postVideoPos' is defined but never used.","'firstUrl' is assigned a value but never used.","'unsername' is assigned a value but never used.","'id' is assigned a value but never used.","'first' is assigned a value but never used.","'setFirst' is assigned a value but never used.","'setControls' is assigned a value but never used.","'position' is assigned a value but never used.","'setPosition' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'checkInvite', 'fetchData', and 'sync'. Either include them or remove the dependency array.","ArrayExpression",["177"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'comparePos' is assigned a value but never used.","'b' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.",["178"],"'listData' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'roomname'. Either include it or remove the dependency array.",["179"],"React Hook useEffect has missing dependencies: 'getUserName' and 'messageList.length'. Either include them or remove the dependency array.",["180"],"'React' is defined but never used.","'useState' is defined but never used.",{"desc":"181","fix":"182"},{"desc":"183","fix":"184"},{"desc":"185","fix":"186"},{"desc":"187","fix":"188"},"Update the dependencies array to be: [checkInvite, fetchData, sync]",{"range":"189","text":"190"},"Update the dependencies array to be: [fetchData]",{"range":"191","text":"192"},"Update the dependencies array to be: [roomname]",{"range":"193","text":"194"},"Update the dependencies array to be: [chatData, getUserName, messageList.length]",{"range":"195","text":"196"},[1500,1502],"[checkInvite, fetchData, sync]",[3457,3459],"[fetchData]",[871,873],"[roomname]",[1270,1280],"[chatData, getUserName, messageList.length]"]